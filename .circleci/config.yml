# CircleCI Version
version: 2

# Jobs to be executes
jobs:
  # Build the application and run tests
  Build and Test:
    # Use docker images
    docker:
      # Application image
      - image: circleci/php:7.2.10-apache-node

      # Database image
      - image: circleci/mysql:8.0.13
        environment:
          MYSQL_DATABASE: matryoshka
          MYSQL_ROOT_PASSWORD: CircleCI

    # Root directory of the application
    working_directory: ~/matryoshka-server

    # Steps in build job
    steps:
      - run:
          name: Install additional software
          command: sudo apt-get install php-xdebug -y

      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install pdo_mysql

      # Checkout the repository at the current commit
      - checkout

      # Try to restore dependencies if identical cache exists
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Install composer dependencies
      - run:
          name: Install composer dependencies
          command: composer install -n --prefer-dist

      # Install Node.js dependencies
      - run:
          name: Install Node.js dependencies
          command: npm install

      # Cache dependencies for future builds if they do not change
      - save_cache:
          paths:
            - ./vendor
            - ./node_modules
          key: v1-dependencies-{{ checksum "composer.json" }}-{{ checksum "package.json" }}

      # Use the CircleCI environment configuration file
      - run:
          name: Use CircleCI environment
          command: cp .env.circleci .env

      # Complete the installation using the install script
      - run:
          name: Install application
          command: php artisan app:build

      # Run PHPUnit tests
      - run:
          name: Run PHPUnit tests
          command: |
            mkdir -p ~/phpunit
            ./vendor/bin/phpunit --log-junit ~/phpunit/junit.xml tests
          when: always

      # Save PHPUnit tests
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit

  # Deploy the application
  Deploy:
    # Use a virtual machine (not docker)
    machine:
      enabled: true

    # Steps in deploy job
    steps:
      # Add SSH keys for deployment machine to the VM based on fingerprint
      - add_ssh_keys:
          fingerprints:
            - "1d:fe:e6:ec:53:51:ca:98:38:85:1e:d7:6a:98:6f:dc"

      # Deploy to the deloyment server via SSH
      - run:
          name: Deploy via SSH
          command: ssh $SSH_USER@$SSH_HOST "cd /var/www/html/matryoshka/;php artisan app:install -p"

# Definition of job orders (workflows)
workflows:
  # CircleCI version
  version: 2

  # If commit is untagged, only build and test
  Untagged:
    jobs:
      - Build and Test
  # If commit is tagged, build, test, and deploy to production
  Tagged:
    jobs:
      - Build and Test:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - Deploy:
          requires:
            - Build and Test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
